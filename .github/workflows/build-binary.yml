name: testjll
on:
  - push

defaults:
  run:
    shell: bash

jobs:
  buildjll:
    name: Build JLL
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.8'
          arch: x64
      - name: Cache artifacts
        uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-jll-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-jll-${{ env.cache-name }}-
            ${{ runner.os }}-jll-
            ${{ runner.os }}-
      - uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: https://cxxwrapdeploy:${{secrets.DEPLOY_KEY}}@github.com/
      - name: Build JLLs
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
          BINARYBUILDER_RUNNER: privileged
          BINARYBUILDER_USE_SQUASHFS: true
          BINARYBUILDER_AUTOMATIC_APPLE: true
        run: |
          #git config --global user.name "al"
          #git config --global user.email "al@example.test"
          julia --project=./binarybuilder -e "using Pkg; Pkg.instantiate()"
          julia --project=./binarybuilder ./binarybuilder/build_tarballs.jl
      - name: Upload JLL artifact
        uses: actions/upload-artifact@v3
        with:
          name: ABINIT-binaries
          path: ./products
          retention-days: 1
      - name: Upload JLL artifact
        uses: actions/upload-artifact@v3
        with:
          name: ABINIT_jll
          path: ~/.julia/dev/ABINIT_jll
          retention-days: 1
