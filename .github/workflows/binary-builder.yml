name: Test JLL
on:
  - push

defaults:
  run:
    shell: bash

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      binarybuilder: ${{ steps.changes.outputs.binarybuilder }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            binarybuilder:
              - 'binarybuilder/**'
              - '.github/workflows/binarry-builder.yaml'

  buildjll:
    name: Build JLL
    needs: changes
    if: needs.changes.outputs.binarybuilder == 'true'
    runs-on: ubuntu-latest
    steps:
      # To let BinaryBuilder increase the patch number automatically.
      - run: julia -e 'using Pkg; pkg"registry add General https://github.com/epolack/HollvedRegistry.jl"'

      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.9'
          arch: x64

      - name: Build JLLs
        env:
          # Needs old token because of check on its size.
          GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
          BINARYBUILDER_RUNNER: privileged
          BINARYBUILDER_USE_SQUASHFS: true
          BINARYBUILDER_AUTOMATIC_APPLE: true
        run: |
          git config --global user.name "Github_Action"
          git config --global user.email "github_action@example.test"
          julia --project=./binarybuilder -e "using Pkg; Pkg.instantiate()"

      - name: Deploying locally
        run: julia --project=./binarybuilder ./binarybuilder/build_tarballs.jl --deploy=local
        if: ${{ github.ref != 'refs/heads/master' }}

      - name: Deploying to registry
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          julia --project=./binarybuilder ./binarybuilder/build_tarballs.jl --deploy=epolack/ABINIT_jll.jl
          julia -e 'using LocalRegistry, ABINIT_jll; register(ABINIT_jll)'

      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1


  test_jll:
    name: "Testing JLL"
    needs: [buildjll]
    if: always() && !cancelled() && !contains(needs.*.result, 'failure')
    runs-on: ubuntu-latest
    steps:
      - run: julia -e 'using Pkg; Pkg.Registry.add(RegistrySpec(; url="https://github.com/epolack/HollvedRegistry.jl"))'

      - uses: actions/checkout@v4

      - name: Setup Julia stable
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.9'
          arch: x64

      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-jll-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-jll-${{ env.cache-name }}-
            ${{ runner.os }}-jll-
            ${{ runner.os }}-

      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
